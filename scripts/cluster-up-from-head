#!/bin/bash

# Meta
export TODAY=`date +%Y-%m-%d`
export PROJECT_ID="s9-demo"
export CLUSTER_NAME="kn-head-${TODAY}"
export CLUSTER_REGION="us-west1"
export CLUSTER_ZONE="${CLUSTER_REGION}-a"
export START_CLUSTER_NODE_SIZE=3
export MAX_CLUSTER_NODE_SIZE=10
export KNATIVE_GATEWAY="istio-ingressgateway"

# API
gcloud services enable \
  cloudapis.googleapis.com \
  container.googleapis.com \
  containerregistry.googleapis.com

# Cluster
# gcloud container clusters delete $CLUSTER_NAME
gcloud container clusters create $CLUSTER_NAME \
  --zone=$CLUSTER_ZONE \
  --cluster-version=latest \
  --machine-type=n1-standard-4 \
  --enable-autoscaling --min-nodes=1 --max-nodes=$MAX_CLUSTER_NODE_SIZE \
  --enable-autorepair \
  --scopes=cloud-platform,service-control,service-management,compute-rw,storage-ro,logging-write,monitoring-write,pubsub,datastore \
  --num-nodes=$START_CLUSTER_NODE_SIZE

# gcloud container clusters get-credentials $CLUSTER_NAME

# GPU POOL
# gcloud compute accelerator-types list
gcloud container node-pools create gpu-node-pool \
  --machine-type=n1-standard-4 \
  --accelerator type=nvidia-tesla-p100,count=1 \
  --zone $CLUSTER_ZONE --cluster $CLUSTER_NAME \
  --num-nodes 1 --min-nodes 1 --max-nodes 1 \
  --enable-autoscaling

# GPU Drivers
kubectl apply -f https://raw.githubusercontent.com/GoogleCloudPlatform/container-engine-accelerators/master/nvidia-driver-installer/ubuntu/daemonset-preloaded.yaml


# Binding
kubectl create clusterrolebinding cluster-admin-binding \
--clusterrole=cluster-admin \
--user=$(gcloud config get-value core/account)

# Istio 0.3
kubectl apply -f https://github.com/knative/serving/releases/download/v0.3.0/istio-crds.yaml
kubectl apply -f https://github.com/knative/serving/releases/download/v0.3.0/istio.yaml
kubectl label namespace default istio-injection=enabled
kubectl create namespace demo
kubectl label namespace demo istio-injection=enabled
kubectl get pods -n istio-system

# Knative
kubectl apply -f https://storage.googleapis.com/knative-nightly/serving/latest/serving.yaml
kubectl apply -f https://storage.googleapis.com/knative-nightly/build/latest/build.yaml
kubectl apply -f https://storage.googleapis.com/knative-nightly/build-pipeline/latest/release.yaml
kubectl apply -f https://storage.googleapis.com/knative-nightly/eventing/latest/eventing.yaml
kubectl apply -f https://storage.googleapis.com/knative-nightly/eventing/latest/in-memory-channel.yaml
kubectl apply -f https://storage.googleapis.com/knative-nightly/eventing-sources/latest/message-dumper.yaml
kubectl apply -f https://storage.googleapis.com/knative-nightly/eventing-sources/latest/release-with-gcppubsub.yaml

kubectl get pods -n knative-serving
kubectl get pods -n knative-build
kubectl get pods -n knative-eventing
kubectl get pods -n knative-sources
kubectl get pods -n knative-monitoring


echo "Use cluster-config to finish setting up this cluster"